@model OrionCoreCableColor.Models.Solicitudes.SolicitudesViewModel
@using OrionCoreCableColor.App_Helper
@{
    ViewBag.Title = "ViewInstalacionDocumentosContratista";
}

<head>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet" />
    <!-- FONT AWESOME -->
    <link href="~/Content/js/loading/loading.css" rel="stylesheet" />
    <!-- Lightbox CSS -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/lightbox2/2.11.3/css/lightbox.min.css" rel="stylesheet">


    <style>
        .preview-image-container {
            width: 200px;
            height: 200px;
            overflow: hidden;
            border: 1px solid #ddd;
            border-radius: 4px;
            text-align: center;
            position: relative;
            cursor: pointer;
        }
        .preview-image-container img {
                width: 100%;
                height: 100%;
                object-fit: cover;
        }

        .preview-image-container .zoom-icon {
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                font-size: 24px;
                color: #fff;
                opacity: 0.7;
        }

            
        .preview-container {
            margin-left: 25%; 
        }
        .d-flex {
            display: flex;
            align-items: flex-start;
        }
        .font-14 {
            font-size: 14px;
        }
        .font-weight-bold {
            font-weight: 700 !important;
        }

    </style>
</head>


<div class="col-lg-12">
    <input id="txtidsolicitud" class="form-control" value="@ViewBag.IdSolicitud" type="hidden">
    <input id="txtidSolicitudContratista" class="form-control" value="@ViewBag.IdSolicitudContratista" type="hidden">
    <input id="txtidcliente" class="form-control" value="@ViewBag.IdCliente" type="hidden">
    <div class="table-responsive" style="flex: 2; margin-right: 20px;">
        <table class="table table-sm table-bordered table-hover" id="tblCatalogosDocumentos" style="width: 100%">
            <thead>
                <tr>
                    <th style="width: 10px;">Ver Documentos</th>
                    <th>Descripción</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td colspan="2" class="text-center">Cargando información...</td>
                </tr>
            </tbody>
        </table>
    </div>


    <div id="detalleCatalogos" style="display:none">
        <table id="tblCatalogosDocumentos" class="table table-bordered table-hover" style="width:500%">
            <thead>
                <tr>
                    @*<th>Acciones</th>
                        <th>Descripción</th>*@
                </tr>
            </thead>
        </table>
    </div>

    <div id="detalleImagenes" style="display: none; margin-top: 20px;">
        <div class="card" style="padding: 20px;">
            <div class="card-body">
                <div class="row">
                    <div class="col col-sm-6">
                        <div class="row justify-content-between">
                            <div class="col-auto" style="margin: 10px;">
                                <button type="button" id="btnAgregarNuevoDocumento" class="btn btn-success waves-effect waves-themed">
                                    <i class="fas fa-plus"></i> Agregar Nuevo
                                </button>
                            </div>

                            <!-- Tabla de documentos -->
                            <div  class="d-flex" style="width: 100%;">
                                <div class="table-responsive mt-3" style="max-height: 500px; overflow-y: auto;">
                                    <table id="tblListadoTipoDocumento" class="table table-bordeless table-hover cursor-pointer" style="width: 100%;">
                                        <thead>
                                            <tr>
                                                <th style="width: 10px;">Acciones</th>
                                                <th>Nombre del archivo</th>
                                                <th>Extención</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr>
                                                <td colspan="2" class="text-center">Cargando información...</td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                         
                        </div>
                    </div>
                    <!--previsualización con Lightbox2 -->
                <div class="preview-container">
                    <label class="font-weight-bold font-14">Previsualización del documento</label>
                    <div id="divPrevisualizacionDocumento_TipoDeDocumento" class="preview-image-container">

                        <a id="previewLink" href="~/Content/img/imagen_no_disponible.png" data-lightbox="image-1" data-title="Imagen no disponible">
                            <img id="previewImage" src="~/Content/img/imagen_no_disponible.png" alt="Previsualización del documento"
                                 onerror="this.src='/Content/img/imagen_no_disponible.png'">
                            <i class="fas fa-search zoom-icon"></i>
                        </a>
                    </div>

                </div>
               

                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="modalAgregarDocumento" tabindex="-1" role="dialog" aria-labelledby="modalAgregarDocumentoLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header bg-primary-600 bg-primary-gradient">
                <h5 class="modal-title text-white" id="modalAgregarDocumentoLabel">Agregar Documento</h5>
                <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="panel-container" style="padding-top:12px; padding-bottom:15px;">
                    <input id="txtidsolicitud" class="form-control" value="@ViewBag.IdSolicitud" type="hidden">
                    <input id="txtidSolicitudContratista" class="form-control" value="@ViewBag.IdSolicitudContratista" type="hidden">
                    <input id="txtidcliente" class="form-control" value="@ViewBag.IdCliente" type="hidden">
                    <input id="txtfiIDCatalogo_FotosInstalacion" class="form-control" value="@ViewBag.fiIDCatalogoFotoInstalacion" type="hidden">
                    <div class="table-responsive">
                        <table class="table table-bordered table-hover table-striped" id="tabledocumento" style="width:100%;">
                            <thead>
                                <tr>
                                    <th>Nombre</th>
                                    <th>Acciones</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td colspan="2" class="text-center">Cargando información...</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <div class="clearfix" style="width:100%;">
                    <button data-dismiss="modal" class="btn btn-link waves-effect waves-themed float-left btn-lg text-danger" type="button" style="text-decoration:none"><i class="text-lg ion-close-round"></i>Cancelar</button>
                    <button type="submit" class="btn btn-link btn-lg text-success" id="btnGuardar" style="text-decoration:none"><i class="text-lg ion-checkmark-round"></i>Guardar</button>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts{
    <script src="~/Content/js/loading/loading.js"></script>
    <!-- Lightbox JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/lightbox2/2.11.3/js/lightbox.min.js"></script>


    <script>

        lightbox.option({
            'resizeDuration': 200,
            'wrapAround': true,
            'fadeDuration': 300,
            'imageFadeDuration': 300
        });

 /******** VER DOCUMENTOS POR CATALOGO*********/
        var tablaCatalogos = $('#tblCatalogosDocumentos').DataTable({
        autoWidth: true,
        responsive: true,
        language: {
            search: '<span><i class="fas fa-search"></i> Buscar:</span> ',
            searchPlaceholder: "Buscar catálogos...",
            emptyTable: "No se encontraron resultados.",
            paginate: {
                first: "Primero",
                previous: "Anterior",
                next: "Siguiente",
                last: "Último"
            },
            info: "Mostrando _START_ a _END_ de _TOTAL_ catálogos."
        },
        ajax: {
            url: '@Url.Action("ObtenerCatalogosDocumentos", "Manto")',
            data: { IdContratistaSolicitud: '@ViewBag.IdSolicitudContratista' },
            method: "GET",
            dataSrc: ""
        },
        columns: [
            {
                data: null,
                render: function (data) {
                    return `
                        <button class="btn btn-sm btn-secondary" onclick="mostrarImagenesCatalogo(${data.fiIDCatalogoFotoInstalacion}, '${data.fcNombreFoto}')" title="Ver imágenes">
                            <i class="fas fa-search"></i>
                        </button>`;
                },
                title: 'Acciones',
                width: '50px'
            },
            { data: 'fcNombreFoto', title: 'Descripción' }
        ]
    });

        function mostrarImagenesCatalogo(idCatalogo, nombreCatalogo) {
            debugger;
        document.getElementById('detalleCatalogos').style.display = 'block';
        $('#detalleImagenes').show();
        $('#tituloCatalogoSeleccionado').text(`Imágenes de ${nombreCatalogo}`);

          var tblListadoTipoDocumento = $('#tblListadoTipoDocumento').DataTable({
                destroy: true,
                autoWidth: true,
                responsive: true,
                language: {
                    search: '<span><i class="fas fa-search"></i> Buscar:</span> ',
                    searchPlaceholder: "Buscar documentos...",
                    emptyTable: "No se encontraron documentos.",
                    paginate: {
                        first: "Primero",
                        previous: "Anterior",
                        next: "Siguiente",
                        last: "Último"
                    },
                    info: "Mostrando _START_ a _END_ de _TOTAL_ documentos."
                },
                ajax: {
                    url: '@Url.Action("ObtenerImagenesPorCatalogo", "Manto")',
                    data: {
                        IdCatalogo: idCatalogo,
                        IdContratistaSolicitud: '@ViewBag.IdSolicitudContratista'
                    },
                    method: "GET",
                    dataSrc: ""
                },
                columns: [
                    {
                        data: "fcUrlDocumento",
                        render: function (data, type, row) {
                            return `
                               <button
                                class="btn btn-sm btn-secondary" onclick="MostrarVistaPrevia({url: '${row.fcUrlDocumento.replace(/\\/g, '/') }', fcNombreDocumento: '${row.fcNombreDocumento + row.fcExtension}',  idDivPrevisualizacion: 'divPrevisualizacionDocumento_TipoDeDocumento'})" title="Ver">
                                <i class="fa-solid fa-magnifying-glass"></i>
                            </button>
                                <button class="btn btn-sm btn-danger" onclick="desactivardocumentos(${row.fiIDCatalogoFotoInstalacion}, '${row.fcNombreDocumento}','${row.fcExtension}','${nombreCatalogo}')" title="Eliminar">
                                 <i class="fas fa-trash-alt"></i>
                              </button>`;
                        },
                        title: 'Acciones',
                        width: '100px'
                    },
                    { data: 'fcNombreDocumento', title: 'Nombre del archivo' },
                    { data: 'fcExtension', title: 'Extención' }
                ]
            });

      }

        function MostrarVistaPrevia({ url,fcNombreDocumento = "Imagen no disponible",idDivPrevisualizacion,lightboxGroup = "image-group" }) {
            debugger;
            const contenedor = $("#" + idDivPrevisualizacion);
            const imgAlt = fcNombreDocumento;
            const imgTemplate = `
                <a href="${url}" data-lightbox="${lightboxGroup}" data-title="${imgAlt}">
                    <img id="previewImage" alt="${imgAlt}" src="${url}"
                         onerror="this.src='/Content/img/imagen_no_disponible.png'">
                    <i class="fas fa-search zoom-icon"></i>
                </a>
            `;

            contenedor.empty().append(imgTemplate);
        }

    document.getElementById("btnAgregarNuevoDocumento").addEventListener("click", function () {
        $('#modalAgregarDocumento').modal('show'); // Muestra el modal
    });


 /*FIN*/

   /******** TABLA PARA SUBIR IMAGENES*********/
  var listadoFotos = [];
  var tablaPrincipalDocumentos = $('#tabledocumento').DataTable({
         //"destroy": true,
          autoWidth: true,
          responsive: true,
          language: {
              "emptyTable": "No se encontraron resultados.",
              //"search": '<div class="icon-addon addon-md"><label for="search" class="ion-search"></label>',
              "paginate": {
                  first: "Primero",
                  previous: "Anterior",
                  next: "Siguiente",
                  last: "Ultimo"
              },
              "lengthMenu": " _MENU_ ",
              "info": "Mostrando registros del _START_ al _END_ de _TOTAL_ registros totales.",
              "infoEmpty": "No hay registros para mostrar.",
          },
          dom: 'Bfrtip',
          order: [[1, "desc"]],
            ajax: {
                url: '@Url.Action("DocumentosPorSolicitudInstalacion", "Manto")',
                data: { IdSolicitud: '@ViewBag.IdSolicitud'},
                method: "Get",
                dataSrc: function (data) {
                    return data;
                }
          },
          columns: [
              {
                  data: 'fcNombreFoto',
              },
              {
                  data: null,
                  render: function (data) {

                      let boton = '';
                      if (data.EstaenLista) {

                         /* boton += `<button class="btn btn-danger" id="" onclick="desactivardocumentos(${data.fiIDDocumento},'${data.fcDescripcion}')">Eliminar</button>`*/
                      } else {
                          llenardrop(data.fiIDDocumento)
                          boton += `<div class="form-group">

                              <form id="Imagen-dropzone-${data.fiIDDocumento}" action="@Url.Action("FormFileResponse","Base")" method="post" enctype="multipart/form-data" class="dropzone needsclick" data-fcnombrefoto="${data.fcNombreFoto}">
                                  <div class="dz-message needsclick">

                                      <div class="dz-icon">
                                          <i class="fal fa-cloud-upload text-muted mb-3"></i>
                                      </div>
                                      <div>
                                          <span class="dz-text">Arrastre Imagen</span>
                                          <p class="text-sm text-muted">O Click para elegirla manualmente</p>


                                      </div>
                                  </div>
                              </form>
                              <canvas src="#" style="display: none" alt="Mi identidad" id="fotopreviacanva-${data.fiIDDocumento}" class="img-thumbail"></canvas>
                          </div>
                          <button onclick="guardarImagenIndividual(${data.fiIDDocumento},'${data.fcNombreFoto}')" class="btn btn-success col-lg-12 col-sm-12 col-md-12 col-xl-12">Guardar</button>`;
                      }
                      return boton;
                  }
              },
          ]
  });


   function llenardrop(iddocumento) {
     debugger;
      let name = iddocumento + 1;
      window['myDropzone' + name] = $('#Imagen-dropzone-' + iddocumento).dropzone({
          addRemoveLinks: true,
          acceptedFiles: 'image/*',
          maxFiles: 1,
          init: function () {
              var myDropzone = this;
              myDropzone.on('maxfilesexceeded', function (file) {
                  AlertaMensaje("Remueva una imagen para colocar uno nuevo");
                  var _ref = file.previewElement;
                  if (_ref != null) {
                      _ref.parentNode.removeChild(file.previewElement);
                  }
                  return;
              });
              myDropzone.on('thumbnail', function (file, dataURL) {

                  RedimencionarImagen(`fotopreviacanva-${iddocumento}`, file, "fotoprevia2", file.name, iddocumento);
              });
          },
          removedfile: function (file) {

              var _ref = file.previewElement;
              if (_ref != null) {
                  var divImagenes = $("#imagenesPrevias").children().toArray();
                  $(divImagenes.find(x => x.id == file.name)).remove();
                  this.files = this.files.filter(x => x != file);
              }
              return _ref != null ? _ref.parentNode.removeChild(file.previewElement) : void 0;
          }
      });
  }


  function guardarImagenIndividual(iddocumento, fcNombreFoto) {
      debugger;
      const dropzoneInstance = Dropzone.instances.find(dz => dz.element.id === `Imagen-dropzone-${iddocumento}`);

      if (dropzoneInstance) {
          guardarimagen(iddocumento, fcNombreFoto, dropzoneInstance);
      } else {
          console.warn(`No se encontró la instancia de Dropzone para el documento ${iddocumento}`);
      }
  }


  document.getElementById('btnGuardar').addEventListener('click', function (event) {
      debugger;
      event.preventDefault();
      guardarTodasImagenes();
  });

  function guardarTodasImagenes() {
      debugger;

      Dropzone.instances.forEach((dropzoneInstance) => {
          const dropzoneElement = dropzoneInstance.element; 
          const idDocumento = dropzoneElement.id.split('-')[2]; 
          const fcNombreFoto = $(dropzoneElement).data('fcnombrefoto'); 
          if (dropzoneInstance.files.length > 0) {
              guardarimagen(idDocumento, fcNombreFoto, dropzoneInstance);
          } else {
              console.warn(`No hay imagen cargada para el documento ${idDocumento}`);
          }
      });
  }


     function guardarimagen(iddocumento, fcNombreFoto, dropzoneInstance) {
      debugger;
      H5_loading.show();
      var idclient = $(`#txtidcliente`).val();
      let IdcontratistaSolicitud = document.getElementById("txtidSolicitudContratista").value;
      const originalFile = dropzoneInstance.files[0];
      if (!originalFile) return;
      let fileName = originalFile.name.split('.').slice(0, -1).join('.');
      let fileExtension = '.' + originalFile.name.split('.').pop();
      let fileUrl = fileName + fileExtension;

      var form_data = new FormData();
      form_data.append("fiIDSolicitud", '@ViewBag.IdSolicitud');
      form_data.append("fiIDCatalogoFotoInstalacion", iddocumento);
      form_data.append("fiIDContratistaSolicitud", IdcontratistaSolicitud);
      form_data.append("fcNombreDocumento", fileName);
      form_data.append("fcExtension", fileExtension);
      form_data.append("fcUrlDocumento", fileUrl);

      // Agregar fotos redimensionadas si existen
      for (var i = 0; i < fotosredimencionadas.length; i++) {
          form_data.append(`fotosbase[${i}].base64string`, fotosredimencionadas[i].basesesentaycuatro);
          form_data.append(`fotosbase[${i}].nombrearchivo`, fotosredimencionadas[i].nombreArchivo);
          form_data.append(`fotosbase[${i}].numimagen`, fotosredimencionadas[i].numimagen);
      }


      $.ajax({
          success: function(data) {
              let urlGuardarImagen = "@Url.Action("GuardarFotoInstalacion", "Manto")";
              $.ajax({
                  url: urlGuardarImagen,
                  type: 'POST',
                  data: form_data,
                  cache: false,
                  contentType: false,
                  processData: false,
                  enctype: "multipart/form-data",
                  success: function(datas) {
                      let historialData = {
                          IdSolicitud: '@ViewBag.IdSolicitud',
                          IdCliente: idclient,
                          Observaciones: `Se Guardo Un Documento en el Cátalogo: ${fcNombreFoto} | Nombre Archivo: ${fileName + fileExtension}`,
                          Opcion: 'Modificar Documentos'
                      };

                      let urlGuardarBitacora = "@Url.Action("GuardarBitacorahistorial", "Manto")";
                      $.ajax({
                          url: urlGuardarBitacora,
                          type: "POST",
                          data: historialData,
                          success: function() {
                              var successMsg = { Titulo: "Exito", Mensaje: "Documento y Bitácora guardados correctamente", Estado: true };
                              ToastrSuccess(successMsg.Titulo, successMsg.Mensaje);
                              tablaPrincipalDocumentos.ajax.reload();
                              H5_loading.hide();
                              window.location.reload()
                          },
                          error: function(error) {
                              var errorMsg = { Titulo: "Error", Mensaje: "Error al guardar la bitácora", Estado: false };
                              ToastrSuccess(errorMsg.Titulo, errorMsg.Mensaje);
                          }
                      });
                  },
                  error: function() {
                      var errorMsg = { Titulo: "Error", Mensaje: "Error al guardar la imagen", Estado: false };
                      ToastrSuccess(errorMsg.Titulo, errorMsg.Mensaje);
                  }
              });
          },
          error: function(error) {
              var errorMsg = { Titulo: "Error", Mensaje: "Ocurrió un problema al guardar el documento.", Estado: false };
              ToastrSuccess(errorMsg.Titulo, errorMsg.Mensaje);
              H5_loading.hide();
          }
      });
  }

        function desactivardocumentos(fiIDCatalogoFotoInstalacion, fcNombreDocumento, fcExtension, nombreCatalogo) {
            debugger;
            var idclient = $(`#txtidcliente`).val();
            let IdcontratistaSolicitud = document.getElementById("txtidSolicitudContratista").value;

            bootbox.confirm({
                title: `<i class="" fa-times-circle text-danger mr-2'></i> Esta Seguro que desea Eliminar Este Documento <span class='fw-500'></span>`,
                message: "<span><strong>Advertencia!:</strong> Esta Accion no se puede Reversar</span>",
                centerVertical: true,
                swapButtonOrder: true,
                buttons: {
                    confirm: {
                        label: 'Si',
                        className: 'btn-danger shadow-0'
                    },
                    cancel: {
                        label: 'No',
                        className: 'btn-default'
                    }
                },
                className: "modal-alert",
                closeButton: false,
                callback: function (result) {
                    if (result == true) {
                        $.ajax({
                            url: "@Url.Action("DesactivarDocumentosInstalacion", "Manto")",
                            type: "POST",
                            data: { IdcontratistaSolicitud: IdcontratistaSolicitud, fcNombreDocumento: fcNombreDocumento },
                            success: function (data) {

                                $.ajax({
                                    url: "@Url.Action("GuardarBitacorahistorial", "Manto")",
                                    type: "POST",
                                    data: { IdSolicitud: '@ViewBag.IdSolicitud', IdCliente: idclient, Observaciones: `Se elimino Un Documento del Cátalogo: ${nombreCatalogo} | Nombre Archivo: ${fcNombreDocumento + fcExtension}`, Opcion: 'Eliminar Documentos' },
                                    success: function (datas) {
                                        var datasus = { Titulo: "Exito", Mensaje: "Documento eliminado Correctamente", Estado: true }
                                       ToastrSuccess(datasus.Titulo, datasus.Mensaje);
                                        
                                        //tblListadoTipoDocumento.ajax.reload();
                                        //H5_loading.hide();
                                    },
                                    error: function (datae) {
                                        var dataerror = { Titulo: "Error", Mensaje: "Error al querer Guardar la Bitacora", Estado: false }
                                        ToastrSuccess(datasus.Titulo, datasus.Mensaje);
                                    }
                                });

                                tblListadoTipoDocumento.ajax.reload();
                                H5_loading.hide();
                                window.location.reload()
                            },
                            error: function (datae) {
                                var dataerror = { Titulo: "Error", Mensaje: "Error al querer Eliminar el Documento", Estado: false }
                               /* AlertaAjax(dataerror);*/
                                ToastrSuccess(datasus.Titulo, datasus.Mensaje);
                            }
                        });
                    }
                    if (result == false) {

                    }
                }
            })
        }



        function dataURLtoFile(dataurl, filename) {
            var arr = dataurl.split(','),
                mime = arr[0].match(/:(.*?);/)[1],
                bstr = atob(arr[arr.length - 1]),
                n = bstr.length,
                u8arr = new Uint8Array(n);
            while (n--) {
                u8arr[n] = bstr.charCodeAt(n);
            }
            return new File([u8arr], filename, { type: mime });
        }

        var fotosredimencionadas = [];
        function RedimencionarImagen(idcanva, eimagencaptada, idimg, NombreArchivo, numeroimagen) {
            debugger;
            var ctx = document.getElementById(idcanva).getContext('2d'); // capturamos el id del camva para ponerlo la imagen oculta ahi y asi poder tomar esa imagen y no la que se esta mostrando
            var img = new Image;
            img.src = URL.createObjectURL(eimagencaptada); // insertamos la imagen que el cliente subio para posteriormente hacer la reduccion
            img.onload = function () {
                var canvas = document.getElementById(idcanva);
                var maxAncho = 900; //aqui le ponemos unas medidas estandar que pueden cambiar en un futuro,
                var maxAlto = 1500;

                var proporcion = Math.min(maxAncho / img.width, maxAlto / img.height); // aqui hacemos una proporcion de las imagenes con respecto al tamaño de la imagen original y al estandar que tenemos nosotros aqui adentro
                var propdos = img.width / img.height;
                var ancho = img.width * proporcion;
                var alto = img.height * proporcion;

                canvas.width = (img.width / propdos); // ponemos el tamaño en el canva oculto
                canvas.height = (img.height / propdos);

                ctx.drawImage(img, 0, 0, (img.width / propdos), (img.height / propdos));
                //console.log(canvas.toDataURL('image/jpeg', 0.7)); // tira el base 64
                fotosredimencionadas.push({ canva: idcanva, basesesentaycuatro: canvas.toDataURL('image/jpeg', 0.7), nombreArchivo: NombreArchivo, numimagen: numeroimagen });
                //var urlbase64 = getBase64Image(img); // tira el base 64

                document.getElementById(idimg).src = canvas.toDataURL('image/jpeg', 0.7); // el 07 es la calidad de la imagen si no estoy mal eso decia en la documentacion
                //document.getElementById(idcanva).style.display = "block"; //mostrar la imagen que esta oculta
            }

        }



  /*FIN*/

    </script>
}
