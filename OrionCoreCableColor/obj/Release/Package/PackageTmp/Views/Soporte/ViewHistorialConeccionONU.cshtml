<div class="modal-header bg-primary-600 bg-primary-gradient">
    <h2 class="modal-title text-white" id="titulo">
        
    </h2>
    <button type="button" class="close" data-dismiss="modal">
        <i class="fal fa-times-circle fa-fw fa-lg"></i>
    </button>

</div>

<div class="modal-body">

    <div class="row">
        <div class="col-lg-12">
            <table class="table table-bordered table-hover table-striped w-100 dataTable dtr-inline" style="width:100%;" id="TablaHistorial">
                <thead>
                    
                    <tr>
                        <th>Index</th>
                        <th>Estado</th>
                        <th>T1</th>
                        <th>T2</th>
                        <th>Tiempo</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
</div>

<script>
    $("#titulo").text(`Historial de onu ${Historial.fcMacONU} (${Historial.fcIPONU}) del cliente ${Historial.fcNombreCliente}`);
    $('#TablaHistorial').DataTable({
        autoWidth: true,
        responsive: true,
        language: {
            "emptyTable": "No se encontraron resultados.",
            //"searUrlh": '<div class="icon-addon addon-md"><label for="search" class="ion-search"></label>',
            "paginate": {
                first: "Primero",
                previous: "Anterior",
                next: "Siguiente",
                last: "Ultimo"
            },
            "lengthMenu": " _MENU_ ",
            "info": "Mostrando registros del _START_ al _END_ de _TOTAL_ registros totales.",
            "infoEmpty": "No hay registros para mostrar.",
        },
        dom: `fBrtip`,
        order:[[0,"asc"]],
        columnDefs: [{
            targets: "_all",
            sortable: false
        }],
        data: Historial.listAuditoria,
        columns: [
            {
                data: "id"
            },
            {
                data: null,
                render: function (data) {
                    debugger;
                    return data.estado ? `<label class="text-success">Conectado</label> ` : `<label class="text-danger">Desconectado</label>`; 
                }
            },
            {
                data: null,
                render: function (data) {
                    return moment(data.conectado).format("DD/MM/YYYY HH:mm");
                }
            },
            {
                data: null,
                render: function (data) {
                    if (data.desconectado != "") {
                        return moment(data.desconectado).format("DD/MM/YYYY HH:mm");
                    } else {
                        return moment(new Date).format("DD/MM/YYYY HH:mm") + " ..."
                    }
                    
                }
            },
            {
                data: "tiempo"
            }
        ],
    });
</script>