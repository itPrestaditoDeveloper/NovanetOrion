@model OrionCoreCableColor.Models.Productos.CamaraExternaViewModel
<script src="~/Content/js/qr/html5-qrcode.min.js"></script>

<div class="modal-header bg-primary-600 bg-primary-gradient">
    <h2 class="modal-title text-white">
        <i class="fal fa-camera"></i> <span id="nombre">@Model.Titulo</span>
    </h2>
    <button type="button" class="close" data-dismiss="modal">
        <i class="fal fa-times-circle fa-fw fa-lg"></i>
    </button>

</div>

<div class="modal-body">
    <div class="row">
        <div class="col-lg-12 text-center">
            <label style="display:none;" id="escaneoProducto">Producto</label>
        </div>
    </div>

    <div id="ProductoNoEncontrado">
        <main>
            <div id="reader"></div>
            <div id="result"></div>
        </main>
    </div>
</div>

<script>
    var model = @Html.Raw(Json.Encode(Model));

    var scanner = new Html5QrcodeScanner('reader', {
        // Scanner will be initialized in DOM inside element with id of 'reader'
        qrbox: {
            width: $("#MyModalBig").width() / 2,
            height: $("#MyModalBig").height() / 12,
        },  // Sets dimensions of scanning box (set relative to reader element width)
        fps: 20, // Frames per second to attempt a scan
    });


    scanner.render(success, error);

    function success(result) {
        model.Codigo = result;
        $.ajax({
            url: '@Url.Action("RetornarResultado","Productos")',
            type: "Post",
            data: { model: model },
            success: function () {
                scanner.clear();
                CerrarModalSignalR();
            }
        });
    }


    function error(err) {
        //console.error(err);
        // Prints any errors to the console
    }
</script>
