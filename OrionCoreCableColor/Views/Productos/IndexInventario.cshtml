
<div class="panel">
    <div class="panel-hdr">
        <h2 class="ui-sortable-handle"> <i class="fal fa-download fa-fw"></i> Ingreso de Inventario</h2>
        <div class="panel-toolbar " role="menu">
            <a href="@Url.Action("CrearIngresoInventario")" class="btn btn-success"><i class="fal fa-plus fa-fw"></i> Registrar Inventario</a>
        </div>
    </div>

    <div class="panel-container" style="padding-top:12px; padding-bottom:15px;">
        <div class="col-lg-12">
            <table class="table table-responsive table-bordered table-hover table-striped w-100 dataTable dtr-inline" style="width:100%;" id="TablaPrincipal">
                <thead>
                    <tr>
                        <th></th>
                        <th></th>
                        <th><input type="text" class="form-control" style="width:100%;" placeholder=""></th>
                        <th><input type="text" class="form-control" style="width:100%;" placeholder=""></th>
                        <th><input type="text" class="form-control" style="width:100%;" placeholder=""></th>
                        <th><input type="text" class="form-control" style="width:100%;" placeholder=""></th>
                        <th><input type="text" class="form-control" style="width:100%;" placeholder=""></th>
                        <th><input type="text" class="form-control" style="width:100%;" placeholder=""></th>
                        <th><input type="text" class="form-control" style="width:100%;" placeholder=""></th>
                        <th><input type="text" class="form-control" style="width:100%;" placeholder=""></th>
                        <th><input type="text" class="form-control" style="width:100%;" placeholder=""></th>
                        <th><input type="text" class="form-control" style="width:100%;" placeholder=""></th>
                        <th><input type="text" class="form-control" style="width:100%;" placeholder=""></th>
                        <th><input type="text" class="form-control" style="width:100%;" placeholder=""></th>
                        <th><input type="text" class="form-control" style="width:100%;" placeholder=""></th>
                        <th><input type="text" class="form-control" style="width:100%;" placeholder=""></th>
                        <th><input type="text" class="form-control" style="width:100%;" placeholder=""></th>
                    </tr>
                    <tr>
                        <th></th>
                        <th></th>
                        <th>Factura</th>
                        <th>#Factura</th>
                        <th>Proveedor</th>
                        <th>Descripcion</th>
                        <th>Fecha</th>
                        <th>Ubicacion</th>
                        <th>Tipo Movimiento</th>
                        <th>Gravado</th>
                        <th>Exento</th>
                        <th>Exonerado</th>
                        <th>Saldo</th>
                        <th>ISV</th>
                        <th>Total Factura</th>
                        <th>Partida</th>
                        <th>Estado</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
</div>


@section Scripts {
    <script src="~/Content/js/datagrid/datatables/datatables.export.js"></script>
    <script>


        function VerDetallePartida(id) {
            VerModalConObjetoDeParametro({ partida: id }, "@Url.Action("ViewPartidaContable","Contabilidad")");
        }

        function EditarMaestro(fiIDMovimiento) {
            VerModalConObjetoDeParametro({ fiIDMovimiento: fiIDMovimiento},"@Url.Action("ViewEditarFacturaPadre","Productos")");
        }


        function EditarIngresoInventario(fiIDMovimientoMaestro)
        {
            location.href = "@Url.Action("EditarIngresoInventario", "Productos")?fiIDMovimientoMaestro=" + fiIDMovimientoMaestro;
        }

        function Logueados() {
            VerModalSmConObjetoDeParametro({},"@Url.Action("ListaDeUsuarios","Productos")");
        }

        function ShowPartidaContableInventario(fiIDMovimientoMaestro) {
            VerModalConObjetoDeParametro({ fiIDMovimientoMaestro: fiIDMovimientoMaestro }, "@Url.Action("ViewGenerarPartidaInventario","Productos")");
        }


        function ModificarFactura(fiIDMovimientoMaestro) {
            VerModalScrollConObjetoDeParametro({ fiIDMovimientoMaestro: fiIDMovimientoMaestro }, "@Url.Action("ViewModificarFactura", "Productos")");
        }

        function VerCrearPartida(fiIDInventarioMovimientoMaestro, idMoneda) {
            debugger;
            VerModalConObjetoDeParametro({ fiIDInventarioMovimientoMaestro: fiIDInventarioMovimientoMaestro, idMoneda: idMoneda }, '@Url.Action("ViewCrearPartidaIngresoInventario", "Contabilidad")');
        }


        function Contabilizar(id, action) {
            var tr = $(action).closest("tr");
            var tabla = $.fn.dataTable.Api("#TablaPrincipal");

            var data = tabla.row(tr).data();

             bootbox.confirm({
                 title: `<i class="" fa-times-circle text-danger mr-2'></i> ¿Esta seguro de enviar a contabilidad el inventario ingresado con la factura  #${data.fcNumeroFactura}? <span class='fw-500'></span>`,
                message: " ",
                centerVertical: true,
                swapButtonOrder: true,
                buttons: {
                    confirm: {
                        label: 'Si',
                        className: 'btn-danger shadow-0'
                    },
                    cancel: {
                        label: 'No',
                        className: 'btn-default'
                    }
                },
                className: "modal-alert",
                closeButton: false,
                callback: function (result) {

                    if (result == true) {
                        $.ajax({
                            url: "@Url.Action("ContabilizarInventario", "Productos")",
                            type: "Get",
                            data: { fiIDMovimientoMaestro: id },
                            success: function (data) {

                                if (data.Estado) {
                                    var tabla = $.fn.dataTable.Api("#TablaPrincipal");
                                    tabla.ajax.reload(null, false);
                                    ToastrSuccess("", data.Mensaje);
                                    //RealodTotalHeaders();
                                } else {
                                    ToastrError("Error", data.Mensaje);
                                }


                            },
                            error: function (data) {
                                console.log(data);
                                //AlertaError();

                            }
                        });
                    }
                    if (result == false) {

                    }
                }
            });


        }

        function CambiarStatus(fiIdProducto, fiEstadoProducto) {
            Swal.fire({
                //type: "warning",
                title: `¿Seguro que desea ${ fiEstadoProducto == 1 ? "deshabilitar" : "Habilitar"} el inventario?`,
                showCancelButton: true,
                confirmButtonText: 'Confirmar',
                confirmButtonColor: '#d33',
                cancelButtonText: 'No',
                allowOutsideClick: () => !swal.isLoading()
            }).then((result) => {

                if (result.value == true)
                {
                    $.ajax({
                        url:"@Url.Action("CambiarStatusProducto", "Productos")",
                        type: "Get",
                        data: { fiIdProducto: fiIdProducto },
                        success: function (data) {
                            ToastrSuccess("", data.Mensaje);
                            var tablaT = $.fn.dataTable.Api("#TablaPrincipal");
                            tablaT.ajax.reload();
                        }
                    });
                }

            });
        }

        var tablaPrincipal = $('#TablaPrincipal').DataTable({
            dom: 'Bfrtip',
            autoWidth: true,
            responsive: true,
            language: {
                "emptyTable": "No se encontraron resultados.",
                //"searUrlh": '<div class="icon-addon addon-md"><label for="search" class="ion-search"></label>',
                "paginate": {
                    first: "Primero",
                    previous: "Anterior",
                    next: "Siguiente",
                    last: "Ultimo"
                },
                "lengthMenu": " _MENU_ ",
                "info": "Mostrando registros del _START_ al _END_ de _TOTAL_ registros totales.",
                "infoEmpty": "No hay registros para mostrar.",
            },

            order: [[6, "desc"]],
            ajax: {
                url: '@Url.Action("CargarListaInventarios", "Productos")',
                method: "Get",
                dataSrc: function (data) {
                    return data;
                }
            },

            columns: [
                {
                    data: null,
                    render: function (data) {
                        var opciones = '<div class="btn-group"> <button class="btn btn-primary btn-xs dropdown-toggle waves-effect waves-themed" data-toggle="dropdown" aria-expanded="false"> Acciones  </button>';
                        opciones += '<div class="dropdown-menu">';
                        opciones += (data.fiEstadoMovimientoMaestro == 1 && data.fcPartida == ("" || null) ) ? '<a href="javascript:void(0)" class="dropdown-item" onclick="EditarIngresoInventario(' + data.fiIDMovimientoMaestro + ')"> Editar</a>' : '';
                        opciones += data.fcPartida == ("" || null) ? '<a href="javascript:void(0)" class="dropdown-item" onclick="ModificarFactura(' + data.fiIDMovimientoMaestro + ')">Actualizar Factura</a>' : '';
                        opciones += `<a href="javascript:void(0)" data-Description='${data.fcNumeroFactura}' src="${data.fcDocumentoFactura}" class="dropdown-item" onclick="ShowBigImage(this)">Visualizar Factura</a>`;
                        opciones += data.fcPartida == ("" || null) ? '<a href="javascript:void(0)" class="dropdown-item" onclick="CambiarStatus(' + data.fiIDMovimientoMaestro + ')">' + (data.fiEstadoMovimientoMaestro == 1 ? "Deshabilitar" : "Habilitar") + '</a>' : "";

                        //opciones += (data.fiEstadoMovimientoMaestro == 1 && data.fcPartida == ("" || null)) ? `<a href="javascript:void(0)" class="dropdown-item" onclick="Contabilizar(${data.fiIDMovimientoMaestro},this)">Contabilizar</a>` : "";
                        opciones += (data.fiEstadoMovimientoMaestro == 1 && data.fcPartida == ("" || null)) ? `<a href="javascript:void(0)" class="dropdown-item" onclick="VerCrearPartida(${data.fiIDMovimientoMaestro},1)">Contabilizar</a>` : "";
                        opciones += '</div></div>';
                        return opciones;
                    }
                },
                {
                    data: null,
                    render: function (data) {
                        var opt = "";
                        opt = `<a class="btn btn-link btn-xs view-control details-productos" href="javascript:void(0)" ><i class="fal fa-plus fa-fw text-success"></i></a>`;
                        return opt;
                    }
                },
                {
                    data: null,
                    visible: false,
                    render: function (data)
                    {
                        if (data.fcImagenProducto == "") {
                            return "";
                        }
                        return `<img onclick="ShowBigImage(this)" data-Description="" src="${data.fcDocumentoFactura}" alt="img" class="img-square img-md img-thumbnail" style="cursor:pointer;width:100%;">`;
                    }
                },
                {
                    data: "fcNumeroFactura",

                },
                {
                    data: "fcReferenciaFactura",

                },
                {
                    data: "fcDescripcionFactura"
                },
                {
                    data: null,
                    render: function (data)
                    {
                        return `<label style="display:none;">${data.fdFechaFactura}</label>` + moment(data.fdFechaFactura).format("DD/MM/YYYY HH:mm:ss");
                    }
                },
                {
                    data: "fcUbicacion"
                },
                {
                    data: null,
                    visible: false,
                    render: function (data)
                    {
                        if (data.fiTipoAfectacion > 0) {
                            return `<label class="text-success">${data.fcTipoAfectacion}</label>`;
                        }
                        if (data.fiTipoAfectacion < 0) {
                            return `<label class="text-danger">${data.fcTipoAfectacion}</label>`
                        }
                    }
                },

                {
                    data: null,
                    className:"text-right",
                    render: function (data) {
                        return  data.fcSimboloMoneda + " " + ConvertirDecimal(data.fnImporteGravado);
                    }
                },
                {
                    data: null,
                    className: "text-right",
                    render: function (data) {
                        return data.fcSimboloMoneda + " " + ConvertirDecimal(data.fnImporteExento);
                    }
                },
                {
                    data: null,
                    className: "text-right",
                    render: function (data) {
                        return data.fcSimboloMoneda + " " + ConvertirDecimal(data.fnImporteExonerado);
                    }
                },
                {
                    data: null,
                    className: "text-right",
                    render: function (data) {
                        return data.fcSimboloMoneda + " " + ConvertirDecimal(data.fnSaldo);
                    }
                },
                {
                    data: null,
                    className: "text-right",
                    render: function (data) {
                        return data.fcSimboloMoneda + " " + ConvertirDecimal(data.fnISV);
                    }
                },
                {
                    data: null,
                    className: "text-right",
                    render: function (data) {
                        return data.fcSimboloMoneda + " " + ConvertirDecimal(data.fnTotalFactura);
                    }
                },
                {
                    data: null,
                    render: function (data) {
                        if (data.fcPartida == ("" || null)) {
                            return "";
                        }
                        return `<a href="javascript:void(0)" onclick="VerDetallePartida('${data.fcPartida}')" class="text-info"> ${data.fcPartida}</a>`;
                    }
                },
                {
                    data: null,
                    render: function (data) {
                        if (data.fiEstadoMovimientoMaestro == 1) {
                            return '<div class="badge badge-success">Activo</div>';
                        } else {
                            return '<div class="badge badge-danger">Inactivo</div>';
                        }
                    }
                }

            ]

        });



        $('#TablaPrincipal tbody').on('click', 'a.details-productos', function () {
            var table = $.fn.dataTable.Api("#TablaPrincipal");
            var i = $(this).find("i");
            var tr = $(this).closest('tr');
            var row = table.row(tr);
            var data = table.row(row).data();
            if (row.child.isShown()) {
                // This row is already open - close it
                row.child('');
                row.child.hide();
                tr.removeClass('info');
                $(i).removeClass("fa-minus").removeClass("text-danger").addClass("fa-plus").addClass("text-success");
            }
            else {
                //row.child("Test").show();
                $(i).removeClass("fa-plus").removeClass("text-success").addClass("fa-minus").addClass("text-danger");

                debugger;
                $.ajax({
                    url: '@Url.Action("ViewListaProductosMovimiento", "Productos")',
                    data: { fiIDMovimientoMaestro: data.fiIDMovimientoMaestro },
                    type: 'Get',
                    success: function (data) {
                        UnloadWaitNotification();
                        row.child(data).show();
                        tr.addClass('info');
                    },
                    error: function (data) {
                        console.log(data);
                        AlertaError();
                    },
                });
            }
        });


        $("#TablaPrincipal thead th input[type=text]").on('keyup change', function () {
            var tabla = new $.fn.dataTable.Api("#TablaPrincipal");
            tabla.column($(this).parent().index() + ':visible').search(this.value).draw();

        });

        tablaPrincipal.on("responsive-resize", function () {
            var thead = $("#TablaPrincipal thead tr").toArray();
            var buscadores = $(thead[0]).find("th").toArray();

            var titulos = $(thead[1]).find("th").toArray();
            for (var x = 0; x < titulos.length; x++) {
                if ($(titulos[x]).css("display") == "none") {

                    $(buscadores[x]).css("display", "none");
                } else {
                    $(buscadores[x]).css("display", "");
                }
            }
        });


        function EnviarIngresoInventario(fiIDMovimientoMaestro)
        {
            $.ajax({
                url: "@Url.Action("EnviarIngresoInventario", "Productos")",
                method: "Get",
                data: { fiIDMovimientoMaestro: fiIDMovimientoMaestro },
                success:function(resp)
                {
                    ToastrSuccess("Inventario", resp.Mensaje);
                }
            });
        }
    </script>

}