@model OrionCoreCableColor.Models.Precalificado.ListDistribuidorViewModel
<style>
    legend {
        font-weight: bold;
        font-size: 1.1rem;
        padding: 0 10px;
        width: auto;
        margin-bottom: 1rem;
       
    }
</style>

<div class="modal-header bg-primary-600 bg-primary-gradient">

    @if (Model.EsEditar)
    {<h2 class="modal-title text-white">Editar Distribuidor</h2> }
    else
    {<h2 class="modal-title text-white">Crear Distribuidor</h2>}
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true"><i class="fal fa-times"></i></span>
    </button>
</div>
<!--Modal body-->
<div class="modal-body">
    <form id="MyFormModal">
        @Html.HiddenFor(model => model.fiIDDistribuidor)
        <fieldset>
            <legend>Datos Representante</legend>
            <div class="row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.fcIdentidadRepresentante)
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fal fa-id-card fa-fw"></i></span>
                        </div>
                        @Html.EditorFor(model => model.fcIdentidadRepresentante, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.fcIdentidadRepresentante, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.fcPrimerNombre)
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fal fa-user width-1"></i></span>
                        </div>
                        @Html.EditorFor(model => model.fcPrimerNombre, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.fcPrimerNombre, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.fcSegundoNombre)
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fal fa-user width-1"></i></span>
                        </div>
                        @Html.EditorFor(model => model.fcSegundoNombre, new { htmlAttributes = new { @class = "form-control"} })
                    </div>
                    @Html.ValidationMessageFor(model => model.fcSegundoNombre, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.fcPrimerApellido)
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fal fa-user width-1"></i></span>
                        </div>
                        @Html.EditorFor(model => model.fcPrimerApellido, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.fcPrimerApellido, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.fcSegundoApellido)
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fal fa-user width-1"></i></span>
                        </div>
                        @Html.EditorFor(model => model.fcSegundoApellido, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.fcSegundoApellido, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.fcTelefonoMovil)
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fal fa-phone fa-fw"></i></span>
                        </div>
                        @Html.EditorFor(model => model.fcTelefonoMovil, new { htmlAttributes = new { @class = "form-control"} })
                    </div>
                    @Html.ValidationMessageFor(model => model.fcTelefonoMovil, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-md-12">
                    @Html.LabelFor(model => model.fcCorreoElectronico)
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fal fa-envelope fa-fw"></i></span>
                        </div>
                        @Html.EditorFor(model => model.fcCorreoElectronico, new { htmlAttributes = new { @class = "form-control", @type = "email"} })
                    </div>
                    @Html.ValidationMessageFor(model => model.fcCorreoElectronico, "", new { @class = "text-danger" })
                </div>
            </div>
        </fieldset>

        <!-- Información del Distribuidor -->
        <br />
        <fieldset>
            <legend>Datos  Empresa</legend>
            <div class="row">
                <div class="form-group col-md-12">
                    @Html.LabelFor(model => model.fcNombreComercial)
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fal fa-building fa-fw"></i></span>
                        </div>
                        @Html.EditorFor(model => model.fcNombreComercial, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.fcNombreComercial, "", new { @class = "text-danger"  })
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.fcRTN)
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fal fa-id-card fa-fw"></i></span>
                        </div>
                        @Html.EditorFor(model => model.fcRTN, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.fcRTN, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.fcTelefono)
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fal fa-phone fa-fw"></i></span>
                        </div>
                        @Html.EditorFor(model => model.fcTelefono, new { htmlAttributes = new { @class = "form-control"} })
                    </div>
                    @Html.ValidationMessageFor(model => model.fcTelefono, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-md-12">
                    @Html.LabelFor(model => model.fcDireccion)
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fal fa-map-marker fa-fw"></i></span>
                        </div>
                        @Html.TextAreaFor(model => model.fcDireccion, new { @class = "form-control", rows = 2 })
                    </div>
                    @Html.ValidationMessageFor(model => model.fcDireccion, "", new { @class = "text-danger" })
                </div>
            </div>
        </fieldset>

        <div class="modal-footer">
            <div class="clearfix" style="width:100%;">
                <button data-dismiss="modal" class="btn btn-link waves-effect waves-themed float-left btn-lg text-danger" type="button"><i class="text-lg ion-close-round"></i></button>
                <button class="btn btn-link btn-lg waves-effect waves-themed float-right text-success"><i class="text-lg ion-checkmark-round"></i></button>
            </div>

        </div>

    </form>
</div>



@Scripts.Render("~/bundles/jqueryval")

<script>
    $("#MyFormModal").submit(function (event) {
        event.preventDefault();
        if (!$("#MyFormModal").valid()) {
            return false;
        }
        var model = @Html.Raw(Json.Encode(Model));
        model.fiIDDistribuidor = $("#fiIDDistribuidor").val();
        model.fcIdentidadRepresentante = $("#fcIdentidadRepresentante").val();
        model.fcPrimerNombre    = $("#fcPrimerNombre").val();
        model.fcSegundoNombre   = $("#fcSegundoNombre").val();
        model.fcPrimerApellido  = $("#fcPrimerApellido").val();
        model.fcSegundoApellido = $("#fcSegundoApellido").val();
        model.fcCorreoElectronico = $("#fcCorreoElectronico").val();
        model.fcTelefonoMovil = $("#fcTelefonoMovil").val();

        model.fcNombreComercial = $("#fcNombreComercial").val();
        model.fcTelefono = $("#fcTelefono").val();
        model.fcRTN = $("#fcRTN").val();
        model.fcDireccion = $("#fcDireccion").val();

        var url = "@Url.Action("ActualizarDistribuidor", "PrecalificaCliente")";

        $.ajax({
            url: url,
            type: 'POST',
            data: JSON.stringify({ model: model }),
            contentType: "application/json; charset=utf-8",
            success: function (data) {

                console.log('data:', data)
                if (data.Estado) {
                    CerrarModal();
                    $.fn.dataTable.Api("#TablaPrincipal").ajax.reload().draw(false);
                }
                AlertaAjax(data);
            },
            error: function (data) {
                AlertaError();
            },
        });


    });
</script>


