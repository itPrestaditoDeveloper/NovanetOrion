@{
    ViewBag.Title = "ViewDataProductoParaServicio";
}

<div class="modal-header bg-primary-600 bg-primary-gradient">
    <h2 class="modal-title text-white">Productos</h2>
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true"><i class="fal fa-times"></i></span>
    </button>
</div>

<div class="modal-body">
    <form id="MyFormModal">
        <div class="panel-container">
            <div class="col-lg-12">
                <table class="table table-bordered table-hover table-striped w-100 dataTable dtr-inline" style="width:100%;" id="TablaProductoServicio">
                    <thead>
                        <tr>
                            <th style="width:50px; display:none !important">Numero Producto</th>
                            <th style="width:100px;">Producto</th>
                            <th style="width:100px;">tipo</th>
                            <th style="width:100px;">Valor</th>
                            <th style="width:100px;">Action</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>

        <div class="modal-footer">
            <div class="clearfix" style="width:100%;">
                <button data-dismiss="modal" class="btn btn-link waves-effect waves-themed float-left btn-lg text-danger" type="button"><i class="text-lg ion-close-round"></i></button>
                <button type="button" id="btnGuardar" class="btn btn-link btn-lg waves-effect waves-themed float-right text-success"><i class="text-lg ion-checkmark-round"></i></button>
            </div>
        </div>
    </form>
</div>

<script>
    var rowSeleccionado;
    var tablaPrincipalServicio = $('#TablaPrincipalServicio').DataTable({
        autoWidth: true,
        responsive: true,
        "destroy": true,
        language: {
            "emptyTable": "No se encontraron resultados.",
            "searUrlh": '<div class="icon-addon addon-md"><label for="search" class="ion-search"></label>',
            "paginate": {
                first: "Primero",
                previous: "Anterior",
                next: "Siguiente",
                last: "Ultimo"
            },
            "lengthMenu": " _MENU_ ",
            "info": "Mostrando registros del _START_ al _END_ de _TOTAL_ registros totales.",
            "infoEmpty": "No hay registros para mostrar.",
        },
        order: [[1, "desc"]],
        columns: [
            { data: 'fiIDProducto' },
            { data: 'fcProducto' },
            { data: 'fcTipoProducto' },
            {
                data: null,
                render: function (data) {
                    return ConvertirADecimal(data.fnValorProducto) + " $";
                }
            },
        ],
    });

    var tablaProducto = $('#TablaProductoServicio').DataTable({
        autoWidth: true,
        responsive: true,
        "destroy": true,
        language: {
            "emptyTable": "No se encontraron resultados.",
            "searUrlh": '<div class="icon-addon addon-md"><label for="search" class="ion-search"></label>',
            "paginate": {
                first: "Primero",
                previous: "Anterior",
                next: "Siguiente",
                last: "Ultimo"
            },
            "lengthMenu": " _MENU_ ",
            "info": "Mostrando registros del _START_ al _END_ de _TOTAL_ registros totales.",
            "infoEmpty": "No hay registros para mostrar.",
        },
        order: [[1, "desc"]],
        ajax: {
            url: '@Url.Action("CargarProductoServicio", "Solicitudes")',
            method: "Get",
            dataSrc: function (data) {
                // Get current data from tablaPrincipalServicio
                var dataPrincipal = tablaPrincipalServicio.rows().data().toArray();
                
                // Only mark as selected those items that are already in tablaPrincipalServicio
                data.forEach(function(item) {
                    item.Seleccionado = dataPrincipal.some(p => p.fiIDProducto === item.fiIDProducto);
                });
                
                return data;
            }
        },
        columns: [
            { visible: false, data: 'fiIDProducto' },
            { data: 'fcProducto' },
            { data: 'fcTipoProducto' },
            {
                data: null,
                render: function (data) {
                    return ConvertirADecimal(data.fnValorProducto) + " $";
                }
            },
            {
                data: null,
                render: function (data) {
                    return `<div class="custom-control custom-checkbox">
                        <input ${data.Seleccionado ? 'checked' : ''} id="${data.fiIDProducto}" class="custom-control-input" style="margin-left:auto; margin-right:auto;" type="checkbox" value="" name="CheckCheckedFalla">
                        <label class="custom-control-label" for="${data.fiIDProducto}"></label>
                    </div>`;
                }
            },
        ],
        initComplete: function () {
            var dataTabla = tablaPrincipalServicio.rows().data().toArray();
            var tablaProducto = $.fn.dataTable.Api('#TablaProductoServicio');
            var dataTablaProducto = tablaProducto.rows().data().toArray();
            var nodeTablaProducto = tablaProducto.rows().nodes().toArray();

            for (var item of nodeTablaProducto) {
                var dataItem = tablaProducto.row(item._DT_RowIndex).data();
                if (dataTabla.some(x => x.fiIDProducto == dataItem.fiIDProducto)) {
                    dataItem.Seleccionado = true;
                    tablaProducto.row(item).data(dataItem).draw(false);
                }
            }
        }
    });

    $("#btnGuardar").click(function () {
        $("#TablaPrincipalServicio").css('display', '');

        var tablaProducto = $.fn.dataTable.Api("#TablaProductoServicio");
        var dataProductos = tablaProducto.rows().data().toArray();

        // Clear and update tablaPrincipalServicio with all selected products
        tablaPrincipalServicio.clear();
        var productosSeleccionados = dataProductos.filter(x => x.Seleccionado);
        dataPrincipalServicio = productosSeleccionados;
        if (productosSeleccionados.length > 0) {
            tablaPrincipalServicio.rows.add(productosSeleccionados).draw(false);
        }

        $("#MyModalBigSignalR").modal("hide");
        $("#MyModalContentBigSignalR").empty();


		
    });

    $('#TablaProductoServicio tbody').on('click', 'tr input[name=CheckCheckedFalla]', function () {
        var tabla = $.fn.dataTable.Api('#TablaProductoServicio');
        var row = $(this).closest("tr");
        var data = tabla.row(row).data();
        data.Seleccionado = $(this).prop('checked');
        tabla.row(row).data(data).draw(false);

        // Update tablaPrincipalServicio immediately
        var tablaPrincipal = $.fn.dataTable.Api("#TablaPrincipalServicio");
        if (data.Seleccionado) {
            tablaPrincipal.row.add(data).draw(false);
        } else {
            tablaPrincipal.rows(function (idx, rowData) {
                return rowData.fiIDProducto === data.fiIDProducto;
            }).remove().draw(false);
        }
    });
</script>