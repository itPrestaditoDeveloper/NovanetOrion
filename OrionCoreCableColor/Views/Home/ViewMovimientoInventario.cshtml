@model OrionCoreCableColor.Models.Productos.CrearSalidaInventarioViewModel

<div class="modal-header bg-primary-600 bg-primary-gradient">
    <h2 class="modal-title text-white">
        Productos
    </h2>
    <button type="button" class="close" data-dismiss="modal">
        <i class="fal fa-times-circle fa-fw fa-lg"></i>
    </button>

</div>


<div class="modal-body">
    <div class="row">
        <div class="col-sm-6">
            <div class="form-group">
                @Html.LabelFor(model => model.fiIdUbicacion, htmlAttributes: new { @class = "control-label" })
                <div class="input-group mar-btm">

                    @Html.DropDownListFor(model => model.fiIdUbicacion, new SelectList(ViewBag.ListUbicaciones, "Value", "Text"), null, new { @class = "form-control input-lg", @style = "width:100%;" })

                </div>
                @Html.ValidationMessageFor(model => model.fiIdUbicacion, "", new { @class = "text-danger" })
            </div>
        </div>
        @if (ViewBag.BagPermisoTotal)
        {
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.fiIDUbicacionDestino, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group mar-btm">
                        @Html.DropDownListFor(model => model.fiIDUbicacionDestino, new SelectList(ViewBag.ListUbicaciones, "Value", "Text"), null, new { @class = "form-control input-lg", @style = "width:100%;" })
                    </div>
                    @Html.ValidationMessageFor(model => model.fiIDUbicacionDestino, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
        <div class="col-sm-6">
            <div class="form-group">
                @Html.LabelFor(model => model.fiIDUbicacionDestino, htmlAttributes: new { @class = "control-label" })
                <div class="input-group mar-btm">
                    @Html.DropDownListFor(model => model.fiIDUbicacionDestino, new SelectList(ViewBag.ListUbicacionesExternos, "Value", "Text"), null, new { @class = "form-control input-lg", @style = "width:100%;" })
                </div>
                @Html.ValidationMessageFor(model => model.fiIDUbicacionDestino, "", new { @class = "text-danger" })
            </div>
        </div>
        }

        <div class="col-lg-12">
            <hr />
        </div>
    </div>
    <div class="col-lg-12">
        <table class="table table-bordered table-hover table-striped w-100 dataTable dtr-inline" style="width:100%;" id="TablaBodegaSalida">
            <thead>
                <tr>
                    <th></th>
                    <th>Producto</th>
                    <th>Serie1</th>
                    <th>Serie2/Mac</th>
                    <th>Cantidad</th>
                    <th>Referencia</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>


    <div class="modal-footer">
        <div class="clearfix" style="width:100%;">
            <button data-dismiss="modal" class="btn btn-link waves-effect waves-themed float-left btn-lg text-danger" type="button"><i class="text-lg ion-close-round"></i></button>
            <button id="CrearMovimiento" class="btn btn-link btn-lg waves-effect waves-themed float-right text-success"><i class="text-lg ion-checkmark-round"></i></button>
        </div>
    </div>

</div>

<script>
    var modelSalidaInventario = @Html.Raw(Json.Encode(Model));

    var CrearSalidaInventarioViewModel = {
        fiIDInventarioMovimientoMaestro: 0,
        fiIdUbicacion: 0,
        fcUbicacion: "",
        fiIDUsuarioDestino: 0,
        fcDestinatario: 0,
        fiIDTipoMomvimento: 0,
        Firma: null,
        ListaInventarioDetalle: [],
        fbEditar: false,
        fdFechaCreacion: "",
        UsuarioPeticion: "",
        fiIDUbicacionDestino: 0
    };





    $("#fiIdUbicacion").prop("disabled", true);

    $("#fiIDUbicacionDestino").select2({
        dropdownParent: $("#MyModalBig")
    });

    $(`#TablaBodegaSalida`).DataTable({
        autoWidth: true,
        responsive: true,
        language: {
            "emptyTable": "No se encontraron resultados.",
            "paginate": {
                first: "Primero",
                previous: "Anterior",
                next: "Siguiente",
                last: "Ultimo"
            },
            "lengthMenu": " _MENU_ ",
            "info": "Mostrando registros del _START_ al _END_ de _TOTAL_ registros totales.",
            "infoEmpty": "No hay registros para mostrar.",
        },
        data: modelSalidaInventario.ListaInventarioDetalle,
        columns: [
            {
                data: null,
                visible: false,
                className: "text-center",
                render: function (data) {
                    return `<button type="button" name="eliminar" class="btn btn-danger"><i class="fal fa-trash"></i></button>`;
                }
            },
            {
                data: "fcProducto",

            },
            {
                data: "fcCodigoSerie1",

            },
            {
                data: "fcCodigoSerie2",
            },
            {
                data: null,
                render: function (data) {
                    if (data.fbPorCodigo) {
                        return data.fnCantidad;
                    } else {
                        return `<input type="number" class="form-control InputDecimal" data-class="ClaseDecimal" name="fnCantidad" type="text"  value="${data.fnCantidad}" ></input>`;
                    }

                }
            },
            {
                data: "fcDescripcion"
            }
        ],
        initComplete: function () {

        }
    });

    $("#TablaBodegaSalida tbody").on("change", "tr input[name=fnCantidad]", function () {
        debugger;
        var tabla = $.fn.dataTable.Api("#TablaBodegaSalida");
        var tr = $(this).closest("tr");
        if ($(tr).attr('class') == "child") {
            tr = $(this).closest("tr").prev()[0];
        }
        var data = tabla.row(tr).data();
        data.fnCantidad = $(this).val();
    });


    $("#CrearMovimiento").click(function () {
        $("#CrearMovimiento").hide();
        var tabla = $.fn.dataTable.Api("#TablaBodegaSalida");
        var data = tabla.rows().data().toArray();
        modelSalidaInventario.fiIdUbicacion = $("#fiIdUbicacion").val();
        modelSalidaInventario.fiIDUbicacionDestino = $("#fiIDUbicacionDestino").val();
        modelSalidaInventario.ListaInventarioDetalle = data;

        if (data.length == 0) {
            ToastrError("Error", "Agregue productos a la lista");
            $("#CrearMovimiento").Show();
            return;
        }
        

        $.ajax({
            url: "@Url.Action("CrearSalidaInventarioAdministracion", "Productos")",
            method: "Post",
            data: { model: modelSalidaInventario },
            success: function (resp) {
                if (resp.Estado) {
                    ToastrSuccess("Aprobada", resp.Mensaje);
                    location.href = "@Url.Action("Index","Home")";
                } else {
                    ToastrError("Error", resp.Mensaje);
                    $("#CrearMovimiento").Show();
                }
            }
        });

    });




</script>