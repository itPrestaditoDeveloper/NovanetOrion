@model OrionCoreCableColor.Models.Productos.CrearSalidaInventarioViewModel

@{
    ViewBag.Title = "RentabilidadPaquetes";
}

<div class="card h-100">
    <div class="card-body">
        <div class="container-fluid">
            <!-- Primera Fila: Costos y Duración -->
            <div class="row gap-4 mb-4">

                <!-- Costo de Equipos -->
                <div class="col-md-4 p-3 bg-light rounded shadow">
                    <h4>Costo De Equipos</h4>
                    <!-- Selección de Equipos -->
                    <div class="mb-3">
                        <select class="form-control" id="selectEquipos">
                            <option value="">-- Selecciona un equipo --</option>
                            <!-- Opciones se llenarán dinámicamente -->
                        </select>
                        <button class="btn btn-sm btn-primary mt-2" onclick="agregarEquipoDesdeSelect()">Agregar Equipo</button>
                    </div>

                    <!-- Tabla de Equipos -->
                    <table class="table table-bordered mt-3" id="tablaEquipos">
                        <thead class="table-secondary">
                            <tr>
                                <th>Nombre</th>
                                <th>Costo</th>
                                <th>Acción</th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- Equipos agregados aparecerán aquí -->
                        </tbody>
                        <tfoot>
                            <tr>
                                <td><strong>Total</strong></td>
                                <td id="totalEquipos"><strong>L0.00</strong></td>
                                <td></td>
                            </tr>
                        </tfoot>
                    </table>
                </div>

                <!-- Duración del Paquete -->
                <div class="col-md-4 p-3 bg-light rounded shadow text-center">
                    <h4>Duración Del Paquete(Meses)</h4>
                    <input type="text" id="fiDuracionPaquete" class="form-control mb-3" placeholder="Aquí Especifique la duración del paquete">
                    <h4>Costo Servicio</h4>
                    <input type="text" readonly id="fiCostoServicio" class="form-control" placeholder="Aquí Especifique el Costo del Servicio">
                    <button class="btn btn-sm btn-primary mt-2" onclick="RentabilidadPorMeses()">Re-Calcular</button>
                </div>

                <!-- Adicionales -->
                <div class="col-md-4 p-3 bg-light rounded shadow">
                    <h4>Adicionales</h4>
                    <div class="mb-3">
                        <label for="selectEquipos" class="form-label">Selecciona un equipo:</label>
                        <select class="form-control" id="selectEquiposAdicionales">
                            <option value="">-- Selecciona un equipo Adicional --</option>
                            <!-- Opciones se llenarán dinámicamente -->
                        </select>
                        <button class="btn btn-sm btn-primary mt-2" onclick="agregarEquipoDesdeSelectAdicional()">Agregar Equipo</button>
                    </div>
                    <!-- Tabla de Equipos -->
                    <table class="table table-bordered mt-3" id="tablaEquiposadicionales">
                        <thead class="table-secondary">
                            <tr>
                                <th>Nombre</th>
                                <th>Costo</th>
                                <th>Acción</th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- Equipos agregados aparecerán aquí -->
                        </tbody>
                        <tfoot>
                            <tr>
                                <td><strong>Total</strong></td>
                                <td id="totalEquiposadicionales"><strong>L0.00</strong></td>
                                <td></td>
                            </tr>
                        </tfoot>
                    </table>
                </div>

            </div>

            <!-- Segunda Fila: Monto del Paquete y VPN -->
            <div class="row gap-4 mb-4">
                <div class="col-md-6 p-3 bg-light rounded shadow text-center">
                    <h4>Monto del Paquete</h4>
                    <input type="text" id="fnMontoPaquete" class="form-control text-center">
                </div>
                <div class="col-md-6 p-3 bg-light rounded shadow text-center">
                    <h4>VPN</h4>
                    @*<span class="btn-sm btn-block badge text-white" id="fiIdVpn"></span>*@
                    <input type="text" readonly id="fiIdVpn" class="form-control text-center" value="">
                </div>


                
            </div>

            <div class="row gap-4 mb-4">
                <div class="col-md-4 p-3 bg-light rounded shadow text-center">
                    <h2>Total Ingresos</h2>
                    <input type="text" readonly id="fitxtTotalIngresos" class="form-control text-center" value="" style="font-size: 1.8rem; font-weight: 600;">
                </div>

                <div class="col-md-4 p-3 bg-light rounded shadow text-center">
                    <h2>Total Gastos</h2>
                    <input type="text" readonly id="fitxttotalGastos" class="form-control text-center" value="" style="font-size: 1.8rem; font-weight: 600;">
                </div>
                <div class="col-md-4 p-3 bg-light rounded shadow text-center">
                    <h2>Rentabilidad:</h2>
                    <span class="form-control btn-sm btn-block badge text-white" id="fitxtPorcentaje" style="font-size: 1.8rem; font-weight: 600;"></span>
                    @*<input type="text" readonly id="fitxtPorcentaje" class="form-control text-center" value="">*@
                </div>
            </div>

            <!-- Tercera Fila: Tabla de Costos -->
            <div class="row mb-4">
                <div class="col-md-12 p-3 bg-light rounded shadow">
                    <h3 id="fiIdPorcentaje">Rentabilidad:___</h3>
                    <table class="table table-bordered" id="tablaRentabilidad">
                        <thead class="table-secondary">
                            <tr><th>Mes</th>
                            <th>Costos Totales: L<label id="fiLabelCostoTotal"></label> </th>
                            <th>Flujo</th></tr>
                        </thead>
                        <tbody>
                            
                        </tbody>
                    </table>
                </div>
            </div>



        </div>
    </div>
</div>





<!-- Script para llenar el select y manejar la tabla -->
<script>
    // Convertir ViewBag en JSON
    var equiposDisponibles = @Html.Raw(Json.Encode(ViewBag.ListaEquipos));
    var equiposAdicionales = @Html.Raw(Json.Encode(ViewBag.ListaAdicionales));

    

    

    document.addEventListener("DOMContentLoaded", function () {
        $("#fiDuracionPaquete").keyup(function () {
            var duracion = ($(this).val() )*280 ;
            
            $(`#fiCostoServicio`).val(`L.${duracion.toFixed(2)}`).attr("data-value", duracion);
        });


        let select = document.getElementById("selectEquipos");
        let selectadicionales = document.getElementById("selectEquiposAdicionales");

        equiposDisponibles.forEach(equipo => {
            let option = document.createElement("option");
            option.value = equipo.Value; // Precio
            option.textContent = `${equipo.Text} - L.${parseFloat(equipo.Value).toFixed(2)}`;
            select.appendChild(option);
        });

        equiposAdicionales.forEach(equipo => {
            let option = document.createElement("option");
            option.value = equipo.Value; // Precio
            option.textContent = `${equipo.Text} - L.${parseFloat(equipo.Value).toFixed(2)}`;
            selectadicionales.appendChild(option);
        });


    });

    var total = 0.00; // Total inicial
    var totaladicionales = 0.00;
    // Función para agregar equipo desde el select
    function agregarEquipoDesdeSelect() {
        let select = document.getElementById("selectEquipos");
        let selectedOption = select.options[select.selectedIndex];

        if (selectedOption.value === "") {
            alert("Selecciona un equipo válido.");
            return;
        }

        let nombre = selectedOption.text.split(" - ")[0]; // Extraer nombre del equipo
        let costo = parseFloat(selectedOption.value);

        agregarEquipo(nombre, costo);
        RentabilidadPorMeses();
    }

    // Función para agregar equipo desde el select
    function agregarEquipoDesdeSelectAdicional() {
        let select = document.getElementById("selectEquiposAdicionales");
        let selectedOption = select.options[select.selectedIndex];

        if (selectedOption.value === "") {
            alert("Selecciona un equipo válido.");
            return;
        }

        let nombre = selectedOption.text.split(" - ")[0]; // Extraer nombre del equipo
        let costo = parseFloat(selectedOption.value);

        agregarEquipoAdicional(nombre, costo);
        RentabilidadPorMeses();
    }

    // Función para agregar equipo a la tabla
    function agregarEquipo(nombre, costo) {
        let tabla = document.getElementById("tablaEquipos").getElementsByTagName("tbody")[0];

        let newRow = tabla.insertRow();
        let cell1 = newRow.insertCell(0);
        let cell2 = newRow.insertCell(1);
        let cell3 = newRow.insertCell(2);

        cell1.innerHTML = nombre;
        cell2.innerHTML = `<span ondblclick="editarCosto(this)" data-value="${costo}">L.${costo.toFixed(2)}</span>`;
        cell3.innerHTML = `<button class="btn btn-danger btn-sm" onclick="eliminarEquipo(this, ${costo})">X</button>`;

        total += costo;
        actualizarTotales();
    }
    
    function agregarEquipoAdicional(nombre, costo) {
        let tabla = document.getElementById("tablaEquiposadicionales").getElementsByTagName("tbody")[0];

        let newRow = tabla.insertRow();
        let cell1 = newRow.insertCell(0);
        let cell2 = newRow.insertCell(1);
        let cell3 = newRow.insertCell(2);

        cell1.innerHTML = nombre;
        cell2.innerHTML = `<span ondblclick="editarCosto(this, true)" data-value="${costo}">L.${costo.toFixed(2)}</span>`;
        cell3.innerHTML = `<button class="btn btn-danger btn-sm" onclick="eliminarEquipoAdicional(this, ${costo})">X</button>`;

        totaladicionales += costo;
        actualizarTotales();
    }

    function editarCosto(elemento, esAdicional = false) {
        let valorActual = parseFloat(elemento.getAttribute("data-value"));

        let input = document.createElement("input");
        input.type = "number";
        input.value = valorActual;
        input.classList.add("form-control");
        input.style.width = "80px";

        input.addEventListener("blur", function () {
            guardarNuevoCosto(elemento, input.value, esAdicional);
        });

        input.addEventListener("keypress", function (event) {
            if (event.key === "Enter") {
                guardarNuevoCosto(elemento, input.value, esAdicional);
            }
        });

        elemento.innerHTML = "";
        elemento.appendChild(input);
        input.focus();
    }

    // Función para eliminar un equipo de la tabla
    function eliminarEquipo(button, costo) {
        let row = button.parentNode.parentNode;
        row.parentNode.removeChild(row);

        // Actualizar total
        total -= costo;
        document.getElementById("totalEquipos").innerHTML = `<strong>L.${total.toFixed(2)}</strong>`;
        RentabilidadPorMeses();
    }

    function guardarNuevoCosto(elemento, nuevoValor, esAdicional) {
        nuevoValor = parseFloat(nuevoValor) || 0;

        let costoAnterior = parseFloat(elemento.getAttribute("data-value")) || 0;

        if (esAdicional) {
            totaladicionales -= costoAnterior;
            totaladicionales += nuevoValor;
        } else {
            total -= costoAnterior;
            total += nuevoValor;
        }

        elemento.setAttribute("data-value", nuevoValor);
        elemento.innerHTML = `L.${nuevoValor.toFixed(2)}`;
        elemento.setAttribute("ondblclick", `editarCosto(this, ${esAdicional})`);

        actualizarTotales();
    }
    function actualizarTotales() {
        document.getElementById("totalEquipos").innerHTML = `<strong>L.${total.toFixed(2)}</strong>`;
        document.getElementById("totalEquiposadicionales").innerHTML = `<strong>L.${totaladicionales.toFixed(2)}</strong>`;
        RentabilidadPorMeses();
    }

    // Función para eliminar un equipo de la tabla
    function eliminarEquipoAdicional(button, costo) {
        let row = button.parentNode.parentNode;
        row.parentNode.removeChild(row);

        // Actualizar total
        totaladicionales -= costo;
        document.getElementById("totalEquiposadicionales").innerHTML = `<strong>L.${totaladicionales.toFixed(2)}</strong>`;
        RentabilidadPorMeses();
    }

    function RentabilidadPorMeses() {
       
        //var fiCostoServicio = parseFloat(document.getElementById("fiCostoServicio").value) || 0;
        var fiCostoServicio = parseFloat($("#fiCostoServicio").attr("data-value")) || 0;
        var fiDuracionPaquete = parseInt(document.getElementById("fiDuracionPaquete").value) || 0;

        var fiIdMontoPaquete = document.getElementById("fnMontoPaquete").value

        if ((isNaN(fiIdMontoPaquete) || fiIdMontoPaquete <= 0) || (isNaN(fiDuracionPaquete) || fiDuracionPaquete <= 0) ) {
            return false;
        }
        var totalCostos = fiCostoServicio  + parseInt(totaladicionales) + parseInt(total) + 1232.64;//cambiar esto a una forma mas dinamica para que no afecte en un futuro cercano

        $(`#fiLabelCostoTotal`).empty();
        $(`#fiLabelCostoTotal`).text(totalCostos);

        let tablaRentabilidad = document.getElementById("tablaRentabilidad").getElementsByTagName("tbody")[0];

        // Validar que la duración sea un número positivo
        if (fiDuracionPaquete <= 0) {
            tablaRentabilidad.innerHTML = ""; // Limpiar la tabla si no es válido
            return;
        }

        // Limpiar la tabla antes de actualizarla
        tablaRentabilidad.innerHTML = "";

        var totalingreso = (fiIdMontoPaquete * fiDuracionPaquete)
        //var porcentaje = ((totalingreso - totalCostos) / totalingreso) * 100;
       
        const numerador = (totalCostos - fiCostoServicio) * 0.03;
        const denominador = 1 - Math.pow(1 + 0.03, -fiDuracionPaquete);
        const ingresoMensual = numerador / denominador;
        const ingresoCalculado = (ingresoMensual * fiDuracionPaquete) + fiCostoServicio;
        const rentabilidad = ((totalingreso - ingresoCalculado) / totalingreso) * 100;
        

        //console.log(`total Ingreso ${totalingreso}`);
        //console.log(`total Costo ${totalCostos}`);
        //console.log(`porcentaje ${porcentaje}`);


        $(`#fiIdPorcentaje`).empty();
        $(`#fiIdPorcentaje`).text(`Porcentaje: %${rentabilidad.toFixed(2)}`);

        $(`#fitxtTotalIngresos`).empty();
        $(`#fitxtTotalIngresos`).val(`L.${totalingreso.toFixed(2)}`);
        $(`#fitxttotalGastos`).empty();
        $(`#fitxttotalGastos`).val(`L.${totalCostos.toFixed(2)}`);
        $(`#fitxtPorcentaje`).empty();
        $(`#fitxtPorcentaje`).text(`%${rentabilidad.toFixed(2)}`);


        let constante = 1 + 0.025954835; // La constante (1 + 0.025954835)
        var sumaformula = 0;
        for (let mes = 1; mes <= fiDuracionPaquete; mes++) {
            let formula = fiIdMontoPaquete / Math.pow(constante, mes);
            let newRow = tablaRentabilidad.insertRow();
            let cell1 = newRow.insertCell(0);
            let cell2 = newRow.insertCell(1);
            let cell3 = newRow.insertCell(2);

            cell1.innerHTML = mes;
            //cell2.innerHTML = `$${costoMensual.toFixed(2)}`;
            cell2.innerHTML = `L.${fiIdMontoPaquete}`;
            cell3.innerHTML = `L.${formula.toFixed(2)}`;

            sumaformula += formula;
        }
        var vpntotal = (sumaformula - totalCostos);
        $(`#fiIdVpn`).empty();
        $(`#fiIdVpn`).val(vpntotal.toFixed(2));

        $(`#fitxtPorcentaje`).removeClass("badge-success badge-danger")
            .addClass(rentabilidad < 0 ? "badge-danger" : "badge-success");


    }


</script>