@{
    ViewBag.Title = "ClientesPagoHoy";
}

<div class="panel">
    <div class="panel-hdr">
        <h2 class="panel-title"> <i class="fal fa-map fa-fw"></i>Debito Automatico Pendiente</h2>

    </div>
    <div class="panel-container" style="padding-top:12px; padding-bottom:15px;">
        <div class="col-lg-12">
            <table class="table table-bordered table-hover table-striped w-100 dataTable dtr-inline" style="width:100%;" id="TablaClientesPagoHoy">
                <thead>
                    <tr>
                        <th>Acciones</th>
                        <th>Identidad</th>
                        <th>Nombre</th>
                        <th>Telefono</th>
                        <th>Estado</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
</div>

<div class="panel">
    <div class="panel-hdr">
        <h2 class="panel-title"> <i class="fal fa-map fa-fw"></i>Debito Automatico Realizado</h2>

    </div>
    <div class="panel-container" style="padding-top:12px; padding-bottom:15px;">
        <div class="col-lg-12">
            <table class="table table-bordered table-hover table-striped w-100 dataTable dtr-inline" style="width:100%;" id="TablaClientes">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Identidad</th>
                        <th>Nombre</th>
                        <th>Saldo</th>
                        <th>Telefono</th>
                        <th>Estado</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>



    </div>
</div>

@section Scripts{
    <script src="~/Content/js/datagrid/datatables/datatables.export.js"></script>

    <script>
        var seleccionados = [];


        var tablaPrincipal = $('#TablaClientesPagoHoy').DataTable({

            autoWidth: true,
            responsive: true,
            language: {
                "emptyTable": "No se encontraron resultados.",
                //"search": '<div class="icon-addon addon-md"><label for="search" class="ion-search"></label>',
                "paginate": {
                    first: "Primero",
                    previous: "Anterior",
                    next: "Siguiente",
                    last: "Ultimo"
                },
                "lengthMenu": " _MENU_ ",
                "info": "Mostrando registros del _START_ al _END_ de _TOTAL_ registros totales.",
                "infoEmpty": "No hay registros para mostrar.",
            },
            dom: 'Bfrtip',
            order: [[1, "desc"]],
              ajax: {
                url: '@Url.Action("LsitaSolicitudesPendiente", "DebitoAutomatico")',
                  method: "Get",
                  dataSrc: function (data) {
                      return data;
                  }
            },
            columns: [
            {

                data: null,
                render: function (data) {

                    var opciones = '<div class="btn-group"> <button class="btn btn-primary btn-xs dropdown-toggle" data-toggle="dropdown" aria-expanded="false"> Acciones</button>';
                    opciones += '<div class="dropdown-menu">';
                    opciones += '<a href="javascript:void(0)" onclick="ModalEnvioSMS(\'' + data.fcNombre + '\',\'' + data.fcTelefono + '\',\'' + data.fiIDCliente + '\',\'' + data.fcIdentidad + '\')" class="dropdown-item"><i class="fal fa-plus fa-fw"></i>Enviar Formulario</a>';

                    opciones += '</div></div>';
                    return opciones;
                }
            },
            {
                data: 'fcIdentidad'
            },

            {
                data: 'fcNombre'
            },

            {
                data: 'fcTelefono'
            },
            {
                data: null,
                render: function (data) {
                    return '<span class="btn-sm btn-block badge badge-secondary">' + data.fcEstadoEnrolamiento +'</span>';
                }

            }


            ],
            buttons: [

                //{
                //    extend: 'pdfHtml5',
                //    text: 'PDF',
                //    titleAttr: 'Generate PDF',
                //    className: 'btn-outline-danger btn-sm mr-1'
                //},
                {
                    extend: 'excelHtml5',
                    text: 'Excel',
                    titleAttr: 'Generate Excel',
                    className: 'btn-outline-success btn-sm mr-1',
                    exportOptions: {
                        columns: [1, 2, 3, 4]
                    }
                },
                {
                    extend: 'csvHtml5',
                    text: 'CSV',
                    titleAttr: 'Generate CSV',
                    className: 'btn-outline-primary btn-sm mr-1'
                },
                {
                    extend: 'copyHtml5',
                    text: 'Copy',
                    titleAttr: 'Copy to clipboard',
                    className: 'btn-outline-primary btn-sm mr-1'
                },
                {
                    extend: 'print',
                    text: 'Print',
                    titleAttr: 'Print Table',
                    className: 'btn-outline-primary btn-sm'
                }
            ],

        });
        var tablaPrincipalpendiente = $('#TablaClientes').DataTable({

            autoWidth: true,
            responsive: true,
            language: {
                "emptyTable": "No se encontraron resultados.",
                //"search": '<div class="icon-addon addon-md"><label for="search" class="ion-search"></label>',
                "paginate": {
                    first: "Primero",
                    previous: "Anterior",
                    next: "Siguiente",
                    last: "Ultimo"
                },
                "lengthMenu": " _MENU_ ",
                "info": "Mostrando registros del _START_ al _END_ de _TOTAL_ registros totales.",
                "infoEmpty": "No hay registros para mostrar.",
            },
            dom: 'Bfrtip',
            order: [[0, "desc"]],
                ajax: {
                url: '@Url.Action("LsitaSolicitudes", "DebitoAutomatico")',
                    method: "Get",
                    dataSrc: function (data) {
                        return data;
                    }
            },
            columns: [

            {
                data: 'fiIDCliente'
            },

            {
                data: 'fcIdentidad'
            },

            {
                data: 'fcNombre'
            },
            {
                data: 'fnValorEnrrolamiento',
                render: function (data, type, row) {
                    if (data == null) return '';
                    return new Intl.NumberFormat('es-HN', { style: 'currency', currency: 'HNL' }).format(data);
                }
            },
            {
                data: 'fcTelefono',
                render: function (data, type, row) {
                    if (!data) return '';

                    // Remueve todo lo que no sea número
                    let numero = data.replace(/\D/g, '');

                    // Si empieza con 504 (Honduras), lo dejamos. Si no, lo agregamos.
                    if (!numero.startsWith('504')) {
                        numero = '504' + numero;
                    }

                    // Extrae partes: +504 XXXX-XXXX
                    let codPais = '+' + numero.substring(0, 3);
                    let parte1 = numero.substring(3, 7);
                    let parte2 = numero.substring(7, 11);

                    return `${codPais} ${parte1}-${parte2}`;
                }
            },
            {
                data: null,
                render: function (data) {
                    return '<span class="btn-sm btn-block badge badge-success">' + data.fcEstadoEnrolamiento + '</span>';
                }

            }

            ],
            buttons: [

                //{
                //    extend: 'pdfHtml5',
                //    text: 'PDF',
                //    titleAttr: 'Generate PDF',
                //    className: 'btn-outline-danger btn-sm mr-1'
                //},
                {
                    extend: 'excelHtml5',
                    text: 'Excel',
                    titleAttr: 'Generate Excel',
                    className: 'btn-outline-success btn-sm mr-1',
                    exportOptions: {
                        columns: [0,1, 2, 3, 4, 5]
                    }
                },
                {
                    extend: 'csvHtml5',
                    text: 'CSV',
                    titleAttr: 'Generate CSV',
                    className: 'btn-outline-primary btn-sm mr-1'
                },
                {
                    extend: 'copyHtml5',
                    text: 'Copy',
                    titleAttr: 'Copy to clipboard',
                    className: 'btn-outline-primary btn-sm mr-1'
                },
                {
                    extend: 'print',
                    text: 'Print',
                    titleAttr: 'Print Table',
                    className: 'btn-outline-primary btn-sm'
                }
            ],

        });


        function ModalEnvioSMS(Nombre, Telefono,IDCliente,fcIdentidad) {

            VerModalConObjetoDeParametro({ Nombre: Nombre, Telefono: Telefono, IDCliente: IDCliente, fcIdentidadCliente: fcIdentidad }, "@Url.Action("ModalEnvioDebitoAutomaticoSMS", "DebitoAutomatico")");

        }
    </script>

}